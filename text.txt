valgrind --track-origins=yes ./fdf ./maps/42.fdf 
==10799== Memcheck, a memory error detector
==10799== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==10799== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==10799== Command: ./fdf ./maps/42.fdf
==10799== 
==10799== Syscall param writev(vector[0]) points to uninitialised byte(s)
==10799==    at 0x4BCB864: writev (writev.c:26)
==10799==    by 0x4CC2ACA: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==10799==    by 0x4CC2C4E: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==10799==    by 0x4CC3D7E: xcb_writev (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==10799==    by 0x48BD0B8: _XSend (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==10799==    by 0x48C2148: _XReadEvents (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==10799==    by 0x48C252B: XWindowEvent (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==10799==    by 0x10D455: mlx_int_wait_first_expose (in /media/sf_SHARED_LINUX/42_Lisboa/FDF/fdf)
==10799==    by 0x10D195: mlx_new_window (in /media/sf_SHARED_LINUX/42_Lisboa/FDF/fdf)
==10799==    by 0x10A947: int_window (fdf.c:19)
==10799==    by 0x10AADD: fdf (fdf.c:42)
==10799==    by 0x10A8D4: main (main.c:19)
==10799==  Address 0x4d20fcc is 28 bytes inside a block of size 16,384 alloc'd
==10799==    at 0x484D953: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==10799==    by 0x48AC42D: XOpenDisplay (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==10799==    by 0x10CF46: mlx_init (in /media/sf_SHARED_LINUX/42_Lisboa/FDF/fdf)
==10799==    by 0x10AA0E: fdf (fdf.c:38)
==10799==    by 0x10A8D4: main (main.c:19)
==10799==  Uninitialised value was created by a stack allocation
==10799==    at 0x10D360: mlx_int_anti_resize_win (in /media/sf_SHARED_LINUX/42_Lisboa/FDF/fdf)
==10799== 
==10799== 
==10799== HEAP SUMMARY:
==10799==     in use at exit: 84,049 bytes in 104 blocks
==10799==   total heap usage: 515 allocs, 411 frees, 122,118 bytes allocated
==10799== 
==10799== LEAK SUMMARY:
==10799==    definitely lost: 0 bytes in 0 blocks
==10799==    indirectly lost: 0 bytes in 0 blocks
==10799==      possibly lost: 0 bytes in 0 blocks
==10799==    still reachable: 84,049 bytes in 104 blocks
==10799==         suppressed: 0 bytes in 0 blocks
==10799== Rerun with --leak-check=full to see details of leaked memory
==10799== 
==10799== For lists of detected and suppressed errors, rerun with: -s
==10799== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

